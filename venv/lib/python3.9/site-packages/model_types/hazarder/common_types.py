from typing import Dict, NamedTuple

from pydantic import BaseModel

from model_types.common.security_rating.security_rating import SecurityRating
from model_types.common.service_lib.types import ServiceTypeEnum
from model_types.common.tech_lib.types import ProductType

KPE = str
KSE = str


class ProvidersMap(NamedTuple):
    null_percentage: float = 1.0
    counter: dict = {}
    location_data: dict = {}


class TechnologiesMap(NamedTuple):
    null_percentage: float = 1.0
    counter: dict = {}


class HazardSecurityRating(BaseModel):
    tech_security_rating: SecurityRating
    provider_security_rating: SecurityRating


class PortfolioProviderHazardTableTypes(BaseModel):
    portfolio_provider_hazard: Dict[ServiceTypeEnum, ProvidersMap] = {}
    statistic_provider_hazard: Dict[ServiceTypeEnum, ProvidersMap] = {}


class ShadowProviderHazardTableTypes(BaseModel):
    shadow_provider_hazard: Dict[ServiceTypeEnum, ProvidersMap] = {}


class PortfolioTechHazardTableTypes(BaseModel):
    portfolio_tech_hazard: Dict[ProductType, TechnologiesMap] = {}
    statistic_tech_hazard: Dict[ProductType, TechnologiesMap] = {}


class ShadowTechHazardTableTypes(BaseModel):
    shadow_tech_hazard: Dict[ProductType, TechnologiesMap] = {}
